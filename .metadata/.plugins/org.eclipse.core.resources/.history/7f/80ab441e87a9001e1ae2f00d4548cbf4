package Test;

import javax.swing.*;
import java.awt.*;
import java.util.Random;

public class ImprovedChristmasTree extends JFrame {
    public ImprovedChristmasTree() {
        setTitle("Improved Christmas Tree");
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);

        JPanel panel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                drawImprovedChristmasTree(g);
            }
        };

        getContentPane().add(panel);
    }

    private void drawImprovedChristmasTree(Graphics g) {
        // Draw tree trunk
        g.setColor(new Color(139, 69, 19));
        g.fillRect(175, 300, 50, 50);

        // Draw tree leaves
        drawTreeLeaves(g, 200, 100, 50, 50);
        drawTreeLeaves(g, 175, 150, 50, 50);
        drawTreeLeaves(g, 225, 150, 50, 50);

        // Draw decorations
        drawDecorations(g, 200, 180, 20);
        drawDecorations(g, 180, 230, 20);
        drawDecorations(g, 220, 230, 20);

        // Draw Christmas lights
        drawChristmasLights(g, 195, 50, 10, 10, 10);

        // Draw the star
        drawStar(g, 200, 10, 20, 20);
    }

    private void drawTreeLeaves(Graphics g, int x, int y, int width, int height) {
        g.setColor(new Color(34, 139, 34)); // Dark Green color for leaves
        g.fillPolygon(new int[]{x, x - width / 2, x + width / 2}, new int[]{y, y + height, y + height}, 3);
    }

    private void drawDecorations(Graphics g, int x, int y, int radius) {
        Random random = new Random();
        for (int i = 0; i < 5; i++) {
            int r = random.nextInt(256);
            int gr = random.nextInt(256);
            int b = random.nextInt(256);
            g.setColor(new Color(r, gr, b));
            g.fillOval(x - radius / 2, y - radius / 2, radius, radius);
            x += 20;
        }
    }

    private void drawChristmasLights(Graphics g, int x, int y, int width, int height, int count) {
        Random random = new Random();
        for (int i = 0; i < count; i++) {
            int r = random.nextInt(256);
            int gr = random.nextInt(256);
            int b = random.nextInt(256);
            g.setColor(new Color(r, gr, b));
            g.fillOval(x, y, width, height);
            x += 30;
        }
    }

    private void drawStar(Graphics g, int x, int y, int width, int height) {
        int[] starX = {x, x + width / 4, x + width / 2, x + 3 * width / 4, x + width, x + 3 * width / 4, x + width / 2, x + width / 4};
        int[] starY = {y + height / 3, y + height / 3, y, y + height / 3, y + height / 3, y + 2 * height / 3, y + height, y + 2 * height / 3};
        g.setColor(new Color(255, 223, 0)); // Yellow color for the star
        g.fillPolygon(starX, starY, 8);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(() -> {
            ImprovedChristmasTree tree = new ImprovedChristmasTree();
            tree.setVisible(true);
        });
    }
}
